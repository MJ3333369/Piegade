name: Python Greetings CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  install-pip-deps:
    name: Install Python Dependencies
    runs-on: self-hosted
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Install Python dependencies
        shell: powershell
        working-directory: greetings
        run: |
          echo "Installing Python dependencies..."
          pip install -r requirements.txt

# === DEPLOY JOBS ===
  deploy-to-dev:
    name: Deploy to Dev Environment
    runs-on: self-hosted
    needs: install-pip-deps
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Stop existing PM2 app (ignore error if not found)
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          echo "Stopping previous PM2 app (ignore errors)..."
          pm2 delete greetings-app-dev; exit 0

      - name: Start app with PM2 on port 7001
        shell: powershell
        working-directory: greetings
        run: |
          echo "Starting greetings-app-dev on port 7001..."
          $env:PORT=7001
          pm2 start app.py --name greetings-app-dev --interpreter python
          Start-Sleep -Seconds 10

  deploy-to-staging:
    name: Deploy to Staging Environment
    runs-on: self-hosted
    needs: tests-on-dev
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Stop existing PM2 app
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          echo "Stopping previous PM2 app (ignore errors)..."
          pm2 delete greetings-app-staging; exit 0

      - name: Start app with PM2 on port 7002
        shell: powershell
        working-directory: greetings
        run: |
          echo "Starting greetings-app-staging on port 7002..."
          $env:PORT=7002
          pm2 start app.py --name greetings-app-staging --interpreter python
          Start-Sleep -Seconds 10

  deploy-to-preprod:
    name: Deploy to Preprod Environment
    runs-on: self-hosted
    needs: tests-on-staging
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Stop existing PM2 app
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          echo "Stopping previous PM2 app (ignore errors)..."
          pm2 delete greetings-app-preprod; exit 0

      - name: Start app with PM2 on port 7003
        shell: powershell
        working-directory: greetings
        run: |
          echo "Starting greetings-app-preprod on port 7003..."
          $env:PORT=7003
          pm2 start app.py --name greetings-app-preprod --interpreter python
          Start-Sleep -Seconds 10

  deploy-to-prod:
    name: Deploy to Prod Environment
    runs-on: self-hosted
    needs: tests-on-preprod
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Stop existing PM2 app
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          echo "Stopping previous PM2 app (ignore errors)..."
          pm2 delete greetings-app-prod; exit 0

      - name: Start app with PM2 on port 7004
        shell: powershell
        working-directory: greetings
        run: |
          echo "Starting greetings-app-prod on port 7004..."
          $env:PORT=7004
          pm2 start app.py --name greetings-app-prod --interpreter python
          Start-Sleep -Seconds 10

# === TEST JOBS ===
  tests-on-dev:
    name: Run Tests on Dev
    runs-on: self-hosted
    needs: deploy-to-dev
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Restart or start PM2 app just in case
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          $env:PORT=7001
          pm2 start app.py --name greetings-app-dev --interpreter python
          Start-Sleep -Seconds 5

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: test-framework

      - name: Install Node.js dependencies
        shell: powershell
        working-directory: test-framework
        run: npm install

      - name: Run tests against dev
        shell: powershell
        working-directory: test-framework
        run: npm run greetings greetings_dev

  tests-on-staging:
    name: Run Tests on Staging
    runs-on: self-hosted
    needs: deploy-to-staging
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Restart or start PM2 app just in case
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          $env:PORT=7002
          pm2 start app.py --name greetings-app-staging --interpreter python
          Start-Sleep -Seconds 5

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: test-framework

      - name: Install Node.js dependencies
        shell: powershell
        working-directory: test-framework
        run: npm install

      - name: Run tests against staging
        shell: powershell
        working-directory: test-framework
        run: npm run greetings greetings_staging

  tests-on-preprod:
    name: Run Tests on Preprod
    runs-on: self-hosted
    needs: deploy-to-preprod
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Restart or start PM2 app just in case
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          $env:PORT=7003
          pm2 start app.py --name greetings-app-preprod --interpreter python
          Start-Sleep -Seconds 5

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: test-framework

      - name: Install Node.js dependencies
        shell: powershell
        working-directory: test-framework
        run: npm install

      - name: Run tests against preprod
        shell: powershell
        working-directory: test-framework
        run: npm run greetings greetings_preprod

  tests-on-prod:
    name: Run Tests on Prod
    runs-on: self-hosted
    needs: deploy-to-prod
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: greetings

      - name: Restart or start PM2 app just in case
        shell: powershell
        working-directory: greetings
        continue-on-error: true
        run: |
          $env:PORT=7004
          pm2 start app.py --name greetings-app-prod --interpreter python
          Start-Sleep -Seconds 5

      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: test-framework

      - name: Install Node.js dependencies
        shell: powershell
        working-directory: test-framework
        run: npm install

      - name: Run tests against prod
        shell: powershell
        working-directory: test-framework
        run: npm run greetings greetings_prod
